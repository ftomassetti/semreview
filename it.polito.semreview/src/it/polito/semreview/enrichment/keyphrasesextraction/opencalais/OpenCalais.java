package it.polito.semreview.enrichment.keyphrasesextraction.opencalais;

import java.nio.charset.Charset;
import java.rmi.RemoteException;

import javax.xml.rpc.ServiceException;

public class OpenCalais {

	/**
	 * @param args
	 * @throws ServiceException 
	 * @throws RemoteException 
	 */
	public static String run(String arg) throws RemoteException, ServiceException {
		
		Charset iso = Charset.forName("ISO-8859-1");
		Charset utf =  Charset.forName("UTF-8");
		
		/*try {
			arg = new String(arg.getBytes("ISO-8859-15"), 
			"UTF-8");
			//arg = "![CDATA["+arg+"]]";
		} catch (UnsupportedEncodingException e) {
			throw new RuntimeException(e);
		}*/
		
		String licenseID = "7u49ahqvym85ct9xyk24uezy";
		String paramsXML = "<c:params xmlns:c=\"http://s.opencalais.com/1/pred/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"><c:processingDirectives c:contentType=\"TEXT/RAW\" c:enableMetadataType=\"SocialTags\" c:outputFormat=\"Text/Simple\"> </c:processingDirectives><c:userDirectives c:allowDistribution=\"true\" c:allowSearch=\"true\" c:externalID=\"17cabs901\" c:submitter=\"ABC\"></c:userDirectives><c:externalMetadata></c:externalMetadata></c:params>";
		// String
		// content="In quotes: Berlusconi in his own words\n \nBerlusconi\'s loose tongue has often got him into trouble\nThe outgoing Italian Prime Minister, Silvio Berlusconi, is well known for his blunt language - a tendency to make what one of his predecessors, Massimo D\'Alema, described as \"planetary gaffes\".\nHere is a selection of Berlusconi clangers:\n\nAt a rally during the 2006 election campaign:\n\"Read The Black Book of Communism and you will discover that in the China of Mao, they did not eat children, but had them boiled to fertilise the fields.\"\n\nOn left-wing voters at a conference of retailers during the 2006 campaign:\n\"I trust the intelligence of the Italian people too much to think that there are so many pricks around who would vote against their own best interests.\"\n\nAt the launch of the 2006 campaign:\n\"I am the Jesus Christ of politics. I am a patient victim, I put up with everyone, I sacrifice myself for everyone.\"\n\nPromising to put family values at the centre of his campaign:\n\"I will try to meet your expectations, and I promise from now on, two-and-a-half months of absolute sexual abstinence, until [election day on] 9 April.\"\n\nTo German MEP Martin Schulz, at start of Italy\'s EU presidency in July 2003:\n\"I know that in Italy there is a man producing a film on Nazi concentration camps - I shall put you forward for the role of Kapo (guard chosen from among the prisoners) - you would be perfect.\"\n\nDuring the controversy raging over the above remark:\n\n\"I\'ll try to soften it and become boring, maybe even very boring, but I am not sure I will be able to do it.\"\n\nTo a German newspaper:\n\n\"In Italy I am almost seen as German for my workaholism. Also I am from Milan, the city where people work the hardest. Work, work, work - I am almost German.\"\n\nAt the Brussels summit, at the end of Italy\'s EU presidency, in December 2003:\n\"Let\'s talk about football and women.\" (Turning to four-times-married German Chancellor, Gerhard Schroeder.) \"Gerhard, why don\'t you start?\"\n\nOn Italian secretaries (comments made at the New York stock exchange):\n\"Italy is now a great country to invest in... today we have fewer communists and those who are still there deny having been one. Another reason to invest in Italy is that we have beautiful secretaries... superb girls.\"\n\nOn Mussolini:\n\"Mussolini never killed anyone. Mussolini used to send people on vacation in internal exile.\"\n\nIn the wake of 11 September:\n\"We must be aware of the superiority of our civilisation, a system that has guaranteed well-being, respect for human rights and - in contrast with Islamic countries - respect for religious and political rights, a system that has as its value understanding of diversity and tolerance...\n\n\"The West will continue to conquer peoples, even if it means a confrontation with another civilisation, Islam, firmly entrenched where it was 1,400 years ago.\"\n\nHis response to worldwide condemnation of the above speech:\n\n\"They have tried to hang me on an isolated word, taken out of context from my whole speech.\"\n\n\"I did not say anything against the Islamic civilisation... It\'s the work of some people in the Italian leftist press who wanted to tarnish my image and destroy my long-standing relations with Arabs and Muslims.\"\n\nOn Italian justice:\n\"Eighty-five per cent of the Italian press is left-wing and among the judges it is even worse... There is a cancer in Italy that we have to treat: the politicisation of the magistracy.\"\n\nOn judges pursuing former Prime Minister Giulio Andreotti on charges relating to the Mafia:\n\n\"Those judges are doubly mad! In the first place, because they are politically mad, and in the second place because they are mad anyway.\n\n\"If they do that job it is because they are anthropologically different from the rest of the human race.\"\n\nOn his trial, now suspended, in which he denies charges of bribing judges to prevent the sale of a state-owned food company to a rival:\n\n\"I believed and still believe that citizen Berlusconi should be praised for having prevented the state\'s wealth from being looted... I was expecting a Gold Medal for Civil Worthiness for ensuring the state earned 2,000bn [lire].\"\n\nOn himself:\n\"The best political leader in Europe and in the world.\"\n\n\"There is no-one on the world stage who can compete with me.\"\n\n\"Out of love for Italy, I felt I had to save it from the left.\"\n\n\"The right man in the right job.\"\n\n\"I don\'t need to go into office for the power. I have houses all over the world, stupendous boats... beautiful airplanes, a beautiful wife, a beautiful family... I am making a sacrifice.\"\n\nA joke about Aids told by Mr Berlusconi:\n\"An Aids patient asks his doctor whether the sand treatment prescribed him will do any good. \'No\', the doctor replies, \'but you will get accustomed to living under the earth\'.\"\n\nHis response to critics who said the joke was offensive:\n\n\"They have lost their minds; they really have come to the end of the line, indeed they have gone beyond it. I would advise them, too, to undergo sand treatment...\"\n\nOn his alleged conflict of interest as prime minister and one of Italy\'s biggest tycoons, with major media holdings:\n\"If I, taking care of everyone\'s interests, also take care of my own, you can\'t talk about a conflict of interest.\"\n\nOn a proposal to base an EU food standards agency in Finland, rather than the Italian city of Parma:\n\"Parma is synonymous with good cuisine. The Finns don\'t even know what prosciutto is. I cannot accept this.\"\n\nOn history:\n\"The founders of Rome were Romulus and Remulus ...\"\n";
		// String content =
		// "Abstract\nIt is now critical to reduce the consumption of natural re-\nsources, especially petroleum. Even in information systems,\nwe have to reduce the total electrical power consumption.\nWe classify network applications to two types of applications,\ntransaction and communication based ones. In this paper, we\nconsider communication based applications like the file trans-\nfer protocol (FTP). A computer named server consumes the\nelectric power to transfer a file to a client depending on the\ntransmission rate. We discuss a model for power consump-\ntion of a data transfer application which depends on the total\ntransmission rate and number of clients to which the server\nconcurrently transmits files. A client has to find a server in\na set of servers, each of which holds a file so that the power\nconsumption of the server is reduced. We discuss a pair of\nalgorithms PCB (power consumption-based) and TRB (trans-\nmission rate-based) to find a server which transmits a file to\na client. In the evaluation, we show the total power consump-\ntion can be reduced by the algorithms compared with the tra-\nditional round-robin algorithm.\n1\nIntroduction\nThe green IT technologies [13] have to be realized in\norder to reduce the consumptions of natural resources like\npetroleum and to resolve air pollution. Even in information\nsystems, the total electric power consumption of computers\nhas to be reduced. Various types of hardware technologies like\nlow-power consumption CPUs are now being developed. A\ncloud computing system [9,10] is composed of a huge number\nof server computers like Google file systems [12]. Biancini et\nal. [7] discuss how to reduce the power consumption of a clus-\nter of homogeneous server computers by turning off servers\nwhich are not required for executing a collection of web re-\n1550-445X/10 $26.00 \u00A9 2010 IEEE\nDOI 10.1109/AINA.2010.109\nquests. Various types of algorithms to find required number\nof servers in homogeneous and heterogeneous servers are dis-\ncussed [1, 15, 18, 22]. In wireless sensor networks [2], routing\nalgorithms [17] to reduce the power consumption of the bat-\ntery in a sensor node are discussed.\nThere are transaction-based and communication-based\ntypes of applications which are performed in networks.\nWe discussed how to reduce the power consumption in a\ntransaction-based application like Web applications [1, 22].\nHere, clients issue Web requests to servers and then the servers\nsend replies to the clients. We assume the communication\nbandwidth is infinite, i.e. the communication overhead is so\nsmall as to be neglected compared with the processing over-\nhead. In another type of application like FTP, a large volume\nof data is transmitted from a server to a client. The power\nconsumption of the server to transmit a file to a client depends\non the transmission rate of the server. According to our ex-\nperiment, at the higher transmission rate a server sends a file,\nthe larger amount of electric power is consumed in the server.\nIn addition, a client consumes so small power as to be ne-\nglected compared with the sever. First, a client finds a server\nwhich holds a file so that not only the time constraints are\nsatisfied but also the power consumption of the server is re-\nduced. In this paper, we discuss a power consumption model\nfor transmitting files based on the experiment. We discuss\ntwo types of algorithms PCB (power consumption-based)\nand TRB (transmission rate-based) to select a server in a\nset of servers so that the total power consumption can be re-\nduced. We evaluate the PCB and TRB algorithms in terms of\nthe total power consumption and the total transmission time\ncompared with traditional round-robin algorithm. We show\nthe total power consumption can be reduced in the PCB and\nTRB algorithms while the total transmission time can be re-\nduced.\nIn section 2, we show the experimental results of the total\npower consumption in file transfer applications. In section 3,\n142\nServer\nNumber of CPUs\nNumber of cores / CPU\nCPU\nMemory\nDISK\nNIC\nTable 1. Servers\ns1\n1\n1\nAMD Athlon 1648B (2.7GHz) (one-core)\n4,096MB\n150GB 7200rpm (SATA2 3Gbps)\nBroadcom Gbit Ether (1Gbps)\nwe discuss the power consumption model for transmitting files\nbased on the experimental results. In section 4, we discuss the\ntotal transmission rate of a server in the file transfer model.\nIn section 5, we discuss how to select a server for download-\ning a file to reduce the power consumption. In section 6, we\nevaluate the allocation algorithms.\n2\n2.1\nExperimentations\nEnvironment\nFirst of all, we measure how much electric power a com-\nputer spends to transfer files to other computers by using the\npower meter Watts up? .Net [19]. Figure 1 shows the exper-\nimentation environment. Here, a pair of server computers s1\nand s2 are interconnected with a pair of client computers c1\nand c2 in 1Gbps networks. That is, the bandwidth bts from a\nserver st to a client cs is 1Gbps. Each client ci downloads a\nfile f from the server sj . The size of the file f is 43,051,806\nbytes long. Here, we measure the total power consumption\nof two types of servers s1 and s2 as shown in Table 1. The\nserver s1 is equipped with one CPU which has one core. The\nserver s2 is composed of a pair of CPUs, each of which is\ncomposed of two cores. For each server st , we carry out two\ntypes of experimentations. First, one client downloads the file\nf from the server st . Secondly, a pair of the clients c1 and c2\nconcurrently download the file f from the server st .\nclients\nservers\nf\nf\ns1\n1Gbps 1Gbit\nswitch\n1Gbit\n1Gbps\nswitch\n1Gbps\n1Gbps\ns2\nc1\n1Gbps\nc2\nFigure 1. Experimental environment.\n2.2\nExperimental results\nFirst, a file f is transmitted from a server st to a client cs .\nThe server st transmits the file f to the client cs at rate trts\n[bps]. There is the maximum transmission rate maxtrst of\n143\ns2\n2\n2\nAMD Opteron 270 (2GHz) (two-cores)\n4096MB\n74GB 10000rpm x 2 RAID1 (SATA 1.5Gbps)\nNvidia Ether Controler (1Gbps)\nthe server st to the client cs (\u2264 bts ) which is smaller than the\nbandwidth bts of the network. If the server st sends files to\nmultiple clients ct1 , ..., ctm (m \u2265 1), the total transmission\nrate tr1 of the server st is given as trt1 + \u00B7 \u00B7 \u00B7 + trtm . A client\ncs receives the file at rate rrts from the server st . maxrrts\nshows the maximum receipt rates of the client cs . Here, trts\n\u2264 maxrrs . The power consumption rate shows the electric\npower consumption for a second [W/sec].\nWe consider two cases. In one case, the server s1 transmits\na file f to one client, say c1 at rate tr11 . Here, the server s1 is\ncomposed of one one-core CPU. The maximum transmission\nrate maxtr1 is 160 [Mbps] in the network of bandwidth with\nb11 = 1G [bps]. In next case, the server s1 transmits the file f\nto a couple of clients c1 and c2 . Here, tr1 = tr11 + tr12 . Fig-\nure 2 shows the power consumption rate of the server s1 for\nthe total transmission rate tr1 . Following the figure, the power\nconsumption rate of the server s1 depends on the total trans-\nmission rate tr1 . At the higher rate tr1 the server s1 transmits\nthe file f , the larger amount of power consumption the server\ns1 consumes. We obtain the approximated formula P C(tr) to\nshow the power consumption rate for total transmission rate tr\n[Mbps] by using the least-squares method to the experimental\nresults. In Figure 2, the bold dotted line shows the approxima-\ntion result of the server s1 where one client downloads the file\nf from the server s1 . The dotted line shows the approximation\nresult of the server s1 where two clients c1 and c2 download\nthe file f from the server s1 . Let P C1 (tr) be the power con-\nsumption rate where one client downloads the file f from the\nserver s1 . P C2 (tr) shows the power consumption rate where\ntwo clients c1 and c2 concurrently download the file f from\nthe server s1 .\n[Power consumption rate for total transmission rate tr]\n1. P C1 (tr) = 0.11tr + 4.15 [W/sec] (one client).\n2. P C2 (tr) = 0.12tr + 4.43 [W/sec] (two clients).\nThe power consumption rate P C(tr) is a linear function of\nthe total transmission rate tr of the server s1 . The coefficients\nof the total transmission rate tr in P C1 and P C2 are small.\nNext, we consider another server s2 which is composed of\na pair of two-core CPUs. Here, the maximum transmission\nrate maxtr is 450 [Mbps]. We measure the power consump-\ntion rate for the total transmission rate tr2 for the one client\nand two client cases. Figure 3 shows the power consump-\ntion rate [W/sec] of the server s2 for the total transmission\n\u03B2(maxm - 1) \u2264 \u03B2(maxm) = \u03B2(maxm + 1). minP C gives\nthe minimum power consumption rate where no file is trans-\nmitted. \u03B2(maxm)\u00B7\u03B1\u00B7maxtr + minP C gives the maximum\npower consumption rate maxP C.\n1 CPU (1 core) and 1 client\n25 1 CPU (1 core) and 2 clients\n0.11tr+4.15\n0.12tr+4.43\n20\nPower consumption rate [W/sec].\n30\n15\n10\n5\n0\n20\n40\n60\n80\n100 120 140\nTotal transmission rate tr [Mbps].\n160\nFigure 2. 1CPU : Power consumption rate\n[W/sec].\nrate. Following Figure 3, the power consumption rate of the\nserver s2 also depends on the total transmission rate like the\none-CPU case. At the higher rate the server s2 transmits the\nfile f , the larger power consumption the server s2 consumes.\nThe approximated formulas P C(tr) of the power consump-\ntion rate of the server s2 for total transmission rate tr [Mbps]\nare given as follows:\n[Power consumption rate for total transmission rate tr]\n1. P C1 (tr) = 0.02tr + 3.02 [W/sec] (one client).\n2. P C2 (tr) = 0.03tr + 3.34 [W/sec] (two clients).\n30\nmaxPC\n\u03B2(m) \u03B1 tr + minPC\nminPC\n0\nmaxtr\nTotal transmission rate tr [Mbps]\nFigure 4. Power consumption rate [W/sec].\n3\nPower Consumption Model\nSuppose there are a collection S = {s1 , ..., sn } of servers,\neach of which holds a full replica of a file f . A client cs would\nlike to obtain the file f . One server st is selected in the set S.\nThe client cs issues a transfer request of the file f to the server\nst . Then, the server st transmits the file f to the client cs as\nshown in Figure 5.\n2 CPU (4 core) and 1 client\n25 2 CPU (4 core) and 2 clients\n0.02tr+3.02\n0.03tr+3.34\n20\nserver\nclient\nf\nf\n15\nst\ncs\n10 Figure 5. File transfer model.\n5 We would like to discuss how much electrical power a\n server st consumes to transfer a file f to a client cs . As shown\n  in the preceding section, the total power consumption of a\n server st to transfer a file f depends on the total transmis-\n  sion rate trt of the server st . Suppose a server st concurrently\n sends files to clients ct1 , ..., ctm at rates trt1 , ..., trtm , respec-\n  tively (m \u2265 1). Let Ct be a set {ct1 , ..., ctm } of the clients.\n   Here, the total transmission rate trt of the server st is given\n  trt1 + \u00B7 \u00B7 \u00B7 + trtm . 0 \u2264 trt \u2264 maxtrt . Each client cts receives\n        messages at receipt rate rrts . maxrrts indicates the maxi-\n       mum receipt rate of the client cts . Here, trts \u2264 maxrrts .\n        The server st allocates each client cts with transmission rate\n       trts so that trts \u2264 maxrrts . In this paper, we assume each\n        client cts is fairly allocated with transmission rate trts . That\n       is, if trts \u2264 maxrrts for every client cts , trts = trt / m. The\n        transmission rates are fairly allocated to clients in the set Ct\n       as follows:\n0\n50\n100 150 200 250 300 350\nTotal transmission rate tr [Mbps].\n400\n450\nFigure 3. 2CPU : Power consumption rate\n[W/sec].\nCompared with the one-CPU case, the power consumption\nrate is not so much increased for increase of transmission rate.\nThe power consumption rate P C(tr) is lineally increased\nfor transmission rate tr as P C(tr) = \u03B2(m)\u00B7\u03B1\u00B7tr + minP C\n(0 \u2264 tr \u2264 maxtr). Here, \u03B1 is the power consumption to\ntransmit one Mbits [W/Mb] for one-client. As shown in Fig-\nures 2 and 3, the more number of client, the more electric\npower is consumed. \u03B2(m) shows how much power consump-\ntion is increased for the number of m of clients. \u03B2(m) \u2265 1\nand \u03B2(m) \u2265 \u03B2(m - 1). There is a fix point maxm such that\n144\nCC = Ct ; st = maxtrt ;\nwhile (CC != \u03C6) {\nn = |CC|; l = false;\nmt = st;\nfor each client cts in CC, {\nif maxrrts < mt / n, {\ntrts = maxrrts ;\nCC = CC - {cts };\nst = st - trts ;\nl = true;\n}\nif l = false, {\nfor each client cts in CC, trts = st / |CC|;\nCC = \u03C6;\n}\n}\n}\nSuppose a server st starts sending a file f to a pair of clients\nc1 and c2 at the same time. Suppose the maximum transmis-\nsion rate maxtrt is 160 [Mbps] and the maximum receipt rate\nmaxrrs of client cs is 160 [Mbps] (s = 1, 2). According to\nthe allocation algorithm, the server st sends the file to each of\nthe clients c1 and c2 at rate 80 [Mbps].\nSuppose a server st sends files f1 , ..., fm to clients ct1 , ...,\nctm , respectively. Let Tts be the total transmission time of the\nfile fs from the server st to the client cs . If the server st sends\nmultiple files concurrently with the file fs , the transmission\ntime Tts is increased. Let minTts shows |f | / min(maxrrts ,\nmaxtrt ) [sec] where |f | indicates the size [bit] of the file f .\nThat is, the server st sends a file f to only the client cs at\nmaximum rate. Tts \u2265 minTts .\nThe average transmission rate (AT R) Ats of the server\nst to the client cs is defined as follows (t = 1, ..., m):\n[Average transmission rate (ATR)]\npaper, we assume trts (t) = trtu (t) = maxtrt / 2 if maxrrs >\nmaxtrt / 2 and maxrru > maxtrt / 2. Thus, if the server\nst concurrently sends files f1 , ..., fm to clients c1 , ..., cm at\ntime t, respectively, trts (t) = maxtrt / m for each file fs if\nmaxrrs > maxtrt for every client cs .\n\u222B et\nThe laxity lf ts (t) is given |f | - t trts (t) dt [bit] at time t.\nThe laxity lf ts (t) show how many bits of a file f the server st\nstill has to transmit to the client cs at time t.\nSuppose there are n (\u2265 1) servers s1 , . . . , sn each of which\nholds a file f . Let Et (t) show the electric power consumption\nrate of a server st at time t [W/sec] (t = 1, . . . , n). maxEt and\nminEt indicate the maximum and minimum electric power\nconsumption of a server st , respectively. That is, minEt \u2264\nEt (t) \u2264 maxEt . maxE and minE show max(maxE1 , ...,\nmaxEn ) and min(minE1 , ..., minEn ), respectively. Here,\nminEt shows the power consumption of a server st which is\nin idle state.\nIn this paper, we assume that only file transfer applications\nare performed on each server st . As discussed in the preceding\nsection, the electric power consumption of a server st depends\non the total transmission rate trt . Let P Ct (tr) show the power\nconsumption rate which a server st spends to transmit a file at\nrate tr. trts (t) shows the transmission rate at which a server\nst sends a file to a client cs at time t. The electric power\nconsumption rate Et (t) of a server st at time t is given as\nfollows:\nEt (t) = P Ct (trts (t)).\nAs discussed in the preceding section, Et (t) is given in a\nlinear function \u03B2t \u00B7 \u03B1t \u00B7 trts (t) + minEt . \u03B1t depends on a type\nof server st and \u03B2t (\u2265 1) depends on the number of clients as\ndiscussed in the preceding section.\nThe power consumption T P Ct (t1 , t2 ) [W] of a server st\nfrom time t1 to time t2 is given as follows:\n\u222B\nAts = 1/Tts [1/sec].\n(2)\n(1)\nt2\nT P Ct (t1 , t2 ) =\nEt (t)dt.\n(3)\nt1\nLet maxAts be 1 / minTts . maxAs = max(maxA1s , ...,\nmaxAns ). minAs = min(maxA1s , ..., maxAns ). maxAs\nand minAs show the maximum AT Rs Ats and Aus for the\nfastest server st and the slowest server su , respectively.\nThe normalized average transmission rate (N AT R)\nats is given Ats / maxAs . maxats and minats are given\nas maxAts / maxAs and minAts / minAs , respectively. For\nthe server st whose maximum transmission rate maxtrt is the\nmaximum in the server set S, ats = 1. For another server su ,\naus \u2264 1. Let trts (t) show the transmission rate [bps] of a file\nf from the server st to the client cs at time t. Suppose the\nserver st starts and ends transmitting \u222B file f to the client cs\na\net\nat time st and et, respectively. Here, st trts (t) dt = |f | and\nthe transmission time Tts = et - st. If the server st sends only\nthe file f to the client cs at time t, trts (t) = min(maxtrt ,\nmaxrrs ) [bps]. Suppose the server st sends a pair of files\nf and g to clients cs and cu at time t, respectively. In this\n4\nTransmission Rate of Server\nSuppose a server st transmits files f1 , ..., fm to clients ct1 ,\n..., ctm at rate trt1 , ..., trtm (m \u2265 1), respectively. There are\ntypes of computers with respect to the normalized transmis-\nsion rate (NTR). Let ats be a normalized transmission rate of\na server st for transmitting a file fs to a client cts . Let Ft (t)\nbe a set of current files which the server st transmits to clients\nat time t. Let Ct (t) be a set of clients ct1 , ..., ctm to which the\nserver st transmits files f1 , ..., fm in Ft (t), respectively. First,\nwe consider a model where a server st satisfies the following\nproperties:\n[Server-bound model] If maxrrt1 + \u00B7 \u00B7 \u00B7 + maxrrtm \u2265\nmaxtrt , for every time t,\n\u2211\nats (t) = d(t) \u00B7 maxat .\n(4)\n145\ncts \u2208Ct (t)\nHere, d(t) (\u2264 1) shows the degradation factor. Here, d(t) is\ngiven \u03B3 (1\u2212|Ct (t)|) (0 < \u03B3 \u2264 1). Here, d(t)\u00B7maxat gives the ef-\nfective transmission rate of the server st . The more number of\nclients a server concurrently sends files, the smaller effective\ntransmission rate.\nthe load balancer K selects one server st in the set S. The\nserver st transmits the file f to the client cs . We discuss how\nto select a server in the set S for a client cs . In this paper, we\nconsider the following constraints:\n1. The file f has to be transmitted to the client so as to sat-\nisfy the deadline constraint.\n2. The power consumption of a selected server st to transfer\nthe file f has to be minimized.\nmaxa t\nf\nf\n1\n2\nf\n3\ntime t\nminTtf\nminTtf\nminTtf\n3\n2\n1\n(1) Serial transmission.\nmaxa t\ns1\nst\nload balancer\nK\ncs\nf1\nf2\nsn\nf3\n\u03B3\n-2\n( minTtf1 + minTtf2 +\ntime t\nminTtf )\n3\nFigure 7. FTP model.\n(2) Parallel transmission.\nFigure 6. Transmission time.\n5.2\nLet us consider three files f1 , f2 , and f3 which a server\nst sends to clients c1 , c2 , and c3 as an example. First, sup-\npose that the server st serially sends the files f1 , f2 , and f3\nto the clients c1 , c2 , and c3 , i.e. ett1 = stt2 and ett2 = stt3 as\nshown in Figure 6. Here, the transmission time T Kt is ett3 -\nstt1 = minTtf1 + minTtf2 + minTtf3 . Next, suppose three\nfiles f1 , f2 , and f3 start at time st and terminate at time et as\nshown in Figure 6 (2). Here, \u03B3 \u22122 T Kt = minTtf1 + minTtf2\n+ minTtf3 . For \u03B3 = 0.98, it takes about 14% longer time than\nthe serial transmission.\nOn the other hand, we consider another environment where\nclients are slower than the server. A client cts cannot receive a\nfile from a server st at rate maxtrt , i.e. maxrrts < maxtrt .\nFurthermore, suppose maxtrts + \u00B7 \u00B7 \u00B7 + maxtrtm < maxtrt .\nHence, transmission rate trts of the server st to client cs is\nmaxrrts .\n[Client-bound model] If maxrrt1 + \u00B7 \u00B7 \u00B7 + maxrrtm \u2264\nmaxtrt ,\n\u2211\ncts \u2208Ct (t) ats (t) =\nmaxat \u00B7 (maxrrt1 + \u00B7 \u00B7 \u00B7 + maxrrtm )/maxtrt .\n(5)\nEven if every client cts receives a file at maximum rates\nmaxrrts , the effective transmission rate is not degraded.\n5\n5.1\nSelection Algorithms of Servers\nRound-robin algorithms\nIn a load balancer K, types of round-robin algorithms are\nwidely used. In the basic round-robin (RR) algorithm, the\nservers s1 , ..., sn in the server set S are totally ordered. A\nrequest is first issued to the first server s1 in the ordered set.\nIf s1 is overloaded, a request is sent to the second server s2 .\nThus, if servers s1 , ..., si are overloaded, a request is issued to\na server si+1 (i < n).\nWe further consider weighted round robin (WRR) [21] and\nweighted least connection (WLC) [20] algorithms. For each\nof the WRR and WLC algorithms, we consider two cases,\nPer (performance) and Pow (power). In Per, the weight is\ngiven in terms of the performance ratio of the servers. That\nis, the higher performance a server supports, the more number\nof processes are allocated to the server. On the other hand,\nthe weight is defined in terms of the power consumption ratio\nof the servers in Pow. The less power a server consumes, the\nmore number of processes are allocated to the server.\n5.3\nAllocation algorithm\nSuppose a load balancer K receives a transfer request of\nthe file f from a client cs at time t. At time t, the maxi-\nmum transmission rate maxtrt (t) of a server st depends on\nthe degradation factor dt (t) of the server st , i.e. the number\nof clients to which the server st concurrently transmits files\nat time t. Here, the maximum transmission rate maxtrt (t) is\ncalculated as follows:\nSystem model\nThere are multiple servers s1 , ..., sn , each of which holds\na file f . Let S be a set of servers s1 , ..., sn . A client cs sends\na transfer request of the file f to a load balancer K. Then,\nCalcMAXTR T(st , cs , t) {\nN C = Ct (t) + {cs };\ndt (t) = \u03B3 1\u2212|N C| ;\nmaxtrt (t) = dt (t) \u00B7 maxtrt ;\n146\n}\nreturn(maxtrt (t));\nmaxtrt (t) = 6\nmaxtrt3(t) = 2\nmaxtrt3(t) = 3\nmaxtrt2(t) = 2\nHere, 0 \u2264 \u03B3 \u2264 1.\nNext, maxtrts (t) shows the maximum transmission rate of\na server st for a client cs at time t. maxtrts (t) is calculated\nas follows:\nmaxtrt1(t) = 2\n(1) basic fair allocation.\nmaxtrt2(t) = 2\nt\nmaxtrt1(t) = 1\nt\n(2) CalcMAXTR_TS() procedure.\nFigure 8. Transmission rate allocation.\nCalcMAXTR TS(st , cs , t) {\ncheck = False; N C = Ct (t) + {cs }; nc = |N C|;\nmaxtrt (t) = CalcMAXTR T(st , cs , t);\nSORT(N C); /*N C is sorted in ascending order of maxrrts .*/\nfor each ci in N C {\nif maxrrti \u2264 maxtrt (t) / nc, {\nif ci = cs , {\nmaxtrts (t) = maxrrti ;\ncheck = True;\nbreak;\n}\nmaxtrts (t) = maxtrt (t) - maxrrti ;\nnc = nc - 1;\n}\n}\nif check = False, {\nmaxtrts (t) = maxtrt (t) / nc;\nbreak;\n}\nreturn(maxtrts (t));\n}\nst for a client cs . In this paper, we propose two allocation\nalgorithms, transmission rate-based (T RB) and power\nconsumption-based (P CB) algorithms to select a server for\na client. In the TRB algorithm, a server st is selected for a\nclient cs where the maximum transmission rate maxtrts (t) of\nthe server st to transmit a file f to a client cs is the largest.\nThe TRB algorithm is shown as follows:\nTRB(cs , t) {\nserver = \u03C6; M AXT R = 0;\nfor each st in S {\nmaxtrts (t) = CalcMAXTR TS(st , cs , t);\nif server = \u03C6, {server = st ; M AXT R = maxtrts (t);}\nelse {\nif M AXT R < maxtrts (t), {\nM AXT R = maxtrts (t); server = st ;\n}\n}\nreturn(server);\n}\nIn the procedure CalcMAXTR TS(), each client cs can\nuse a transmission rate at least maxtrts (t) = maxtrt (t) /\n|Ct (t) + {cs }| [Mbps] in each server st . Here, if the maxi-\nmum receipt rate maxrrts (t) of a client cs is smaller than the\nmaximum receipt rate maxrrts (t) allocated to a client cs , the\nunused part of the maximum transmission rate of the server st\nfor the client cs (= maxtrts (t) - maxrrts (t)) is used for other\nclients.\nFor example, a server st is selected by three clients ct1 ,\nct2 , ct3 (Ct (t) = {ct1 , ct2 , ct3 }) and the maximum transmis-\nsion rate maxtrt (t) of the server st is 6 [Mbps] at time t as\nshown in Figure 8. Suppose maxrrt1 = 1 [Mbps], maxrrt2\n= 2 [Mbps], and maxrrt3 = 3 [Mbps]. In the basic fair allo-\ncation, each client cs is allocated with the same transmission\nrate maxtrts(t) = maxtrt (t) / |Ct (t)| = 6 / 3 = 2 [Mbps] as\nshown in Figure 8 (1). Here, the transmission rate 1 [Mbps]\n(= 2 - 1 [Mbps]) is not used for the client c1 . In addition,\nthe client c3 cannot use the maximum receipt rate maxrrt3 (=\n3 [Mbps]). On the other hand, the unused transmission rate\nof the client c1 (= 1 [Mbps]) can be used for the client c3 in\nthe procedure CalcMAXTR TS(). Then, the three clients can\ndownload files from the server st at the maximum receipt rate\nmaxrrts (t) at time t.\nNext, we discuss how a load balancer K selects a server\nIn the PCB algorithm, a server st is selected for the client\ncs where the power consumption to transmit a file f to a client\ncs is the smallest. Here, |f | / maxtrts (t) is an estimated trans-\nmission time where a server st transmits a file f for a client\ncs with a transmission rate maxtrts (t). The power consump-\ntion P C(tr) of each server st for a client cs is \u03B2(Ct (t)) \u00B7 \u03B1t \u00B7\nmaxtrts (t) as discussed in the preceding section. Here, an es-\ntimated power consumption EP Cts (t) of a server st for trans-\nmitting a file f to a client cs at time t is given as follows:\nEP Cts = (|f | / maxtrts (t)) \u00B7 \u03B2(Ct (t)) \u00B7 \u03B1t \u00B7 maxtrts (t).\n= |f | \u00B7 \u03B2(Ct (t)) \u00B7 \u03B1t .\n(6)\nHere, a server st is selected for a client cs in the PCB algo-\nrithm as follows:\nPCB(cs , t) {\nserver = \u03C6; EP C = 0;\nfor each st in S {\nEP Cts (t) = |f | \u00B7 \u03B2(Ct (t)) \u00B7 \u03B1t\nif server = \u03C6, {server = st ; EP C = EP Cts (t);}\nelse {\nif EP C > EP Cts (t), {\n147\n}\nEP C = EP Cts (t); server = st ;\nof power consumption is larger than PCB algorithm. On the\nother hand, the total amount of power consumption of TRB\nalgorithm is smaller than the RR algorithm.\n}\nreturn(server);\n}\n6\n65\nEvaluation\nWe evaluate the TRB and PCB algorithms in terms of the\ntotal amount of power consumption and total transmission\ntime of the files compared with basic RR algorithm through\nthe simulation. In the evaluation, there are five servers s1 ,\ns2 , s3 , s4 , and s5 as shown in Table 2. S = {s1 , s2 , s3 , s4 ,\ns5 }. The power consumption coefficient \u03B1 to transmit one\nMbits for one client of each server st is randomly selected\nbetween 0.02 and 0.11 [W/Mb] based on the experimental re-\nsults. The increasing rate of the power consumption \u03B2(m) for\nthe number m of clients is randomly selected between 1.09\nand 1.5. The minimum power consumption rate minP C of\neach server st is randomly selected between 3 and 4 [W]. The\nbandwidth br of each server st is randomly selected between\n150 and 450 [Mbps]. Each server st has a replica of a file f .\nThe size of the file f is one giga-byte.\nTotally 100 clients download the file f from one of the\nservers st in the set S. The maximum receipt rate maxrrs\nof each client cs is randomly selected between 0.1 and 100\n[Mbps]. Each client cs issues a transfer request of the file f to\na load balancer K at time sts . Here, the starting time sts of\neach client cs is randomly selected between 1 and 3,600 [sec]\nat the simulation time. Each client issues totally one request in\nthe simulation. In the simulations of the TRB, PCB, and RR\nalgorithms, the same traffic pattern is used. That is, the start-\ning time sts of each client cs is the same during simulations\nof three algorithms.\nServers\ns1\ns2\ns3\ns4\ns5\n\u03B1\n0.03\n0.05\n0.03\n0.09\n0.02\nTable 2. Servers\n\u03B2(m) minP C [W]\n1.259\n3.39\n1.195\n3.17\n1.285\n3.12\n1.117\n3.90\n1.162\n3.02\nbr [Mbps]\n406\n401\n249\n231\n171\nPCB algorithm\nTRB algorithm\nRR algorithm\n60\n55\n50\n45\n40\n35\n30\n25\n20\n15\n0\n10000\n20000\n30000\nSimulation time [sec]\n40000\n50000\nFigure 9. Total power consumption.\nTable 3. Total amount of power consumption.\nPCB\nTRB\nRR\n546,186 [W] 654,161 [W] 1,073,914 [W]\nTable 4 shows the total transmission time in the PCB, TRB,\nand RR algorithms. The total transmission time of the PCB,\nTRB, and RR algorithms are 28,614 [sec], 28,594 [sec], and\n43,744 [sec], respectively. The total transmission time of TRB\nis smaller than the PCB and RR algorithms. However, the\ndifference of the total transmission time between TRB and\nPCB is not big. In the TRB algorithm, a server st is selected,\nwhich can supply the maximum transmission rate. However,\nthe transmission rate of a server st is dynamically changed\nbased on the number of clients. Therefore, the difference be-\ntween PCB and TRB is not big in this simulation.\nTable 4. Total transmission time of the files.\nPCB\nTRB\nRR\n28,614 [sec] 28,594 [sec] 43,744 [sec]\nFigure 9 shows the total power consumption rate [W/sec]\nof the servers at each time t. Table 3 shows the total power\nconsumptions of the servers in the PCB, TRB, and RR algo-\nrithms. The total power consumptions of the PCB, TRB, and\nRR algorithms are 546,186 [W], 654,161 [W], and 1,073,914\n[W], respectively. In the PCB algorithm, the total amount\nof power consumption is the smallest because a server st is\nselected to a client cs , whose the power consumption is the\nsmallest to transmit a file f to the client cs . In the TBR algo-\nrithm, a server st is selected to a client cs , whose transmission\nrate for the client cs is the largest. Then, the total amount\nIn the PCB algorithm, a server st is selected for a client cs\nwithout considering the transmission rate between the server\nst and the client ct . On the other hand, a server st is se-\nlected for a client cs based on the estimated transmission rate\nin TRB algorithm. From the evaluation results, we consider\nthe total power consumption can be more reduced in the PCB\nalgorithm than the TRB algorithm and the difference of the\ntotal transmission time between PCB and TRB is almost ne-\nglectable. In reality, the transmission rate between a server\nst and a client cs is dynamically changed in the network. It\nis not easy to consider the transmission rate of the server st\nto a client cs from the practical point of view. In addition, a\n148\nserver st for a client cs can be selected without considering\nthe transmission rate between the server st and the client cs\nin the PCB algorithm. Therefore, the PCB algorithm is more\nsimple and useful than the TRB and RR algorithms.\n7\nConcluding Remarks\nIn this paper, we discussed how much electric power a\nserver consumes to transfer a file to a client. A server con-\nsumes the electric power proportional to the transmission rate.\nThrough experiment of file transfer among servers and clients,\nwe obtained approximate linear functions showing how much\na server computer consumes the power for transmission rate.\nWe proposed the PCB and TRB algorithms to select a server\nso that the total power consumption of the servers is reduced.\nWe evaluated the PCB and TRB algorithms in terms of the\ntotal power consumption and the total transmission time com-\npared with the basic RR algorithm through simulation. Ac-\ncording to the evaluation results, the total power consumption\nand the total transmission time can be reduced in the PCB and\nTRB algorithms compared with the basic RR algorithm. In the\nPCB algorithm, the total power consumption can be more re-\nduced than the TRB algorithm and the difference of the total\ntransmission time between the PCB and TRB is almost ne-\nglectable. It is not necessary to estimate the transmission rate\nbetween a server and a client in the PCB algorithm. Therefore,\nthe PCB algorithm is more useful for reducing the total power\nconsumption in the data communication-based applications.\n";
		// TODO Auto-generated method stub
		String result = null;
			result = new CalaisLocator().getcalaisSoap().enlighten(
					licenseID,
					arg.replaceAll("\\p{Punct}", " ").replaceAll("\\x0C", " ")
							.replaceAll("\\x14", " ").replaceAll("\\x1C", " ")
							.replaceAll("\\x02", " "), paramsXML);
			// System.out.println(result);

		return result;

	}

}
